<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>QOLAE 2-Way Authentication</title>
  <link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
/>
<script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"></script>

<script>
// Configure axios to call the SSOT Simulation API
axios.defaults.baseURL = 'http://localhost:3011';

// Debug: Check if libraries loaded
console.log('üîç Debugging library loading:');
console.log('Axios available:', typeof axios !== 'undefined');
console.log('Axios baseURL set to:', axios.defaults.baseURL);
</script>
 <style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background: #ffffff;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    position: relative;
    overflow-x: hidden;
  }
/* Animated background elements - Subtle dots on white */
body::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(105, 51, 130, 0.05) 1px, transparent 1px);
      background-size: 50px 50px;
      animation: float 20s ease-in-out infinite;
      z-index: 0;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px) rotate(0deg); }
      50% { transform: translateY(-20px) rotate(180deg); }
    }
    .main-container {
      position: relative;
      z-index: 1;
      width: 100%;
      max-width: 900px;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    /* QOLAE Logo - Clean, Consistent with LawyersLoginPortal */
    .logo-enhanced {
      text-align: center;
      margin-bottom: 2rem;
      animation: slideInDown 0.8s ease-out;
    }

    @keyframes slideInDown {
      from {
        opacity: 0;
        transform: translateY(-30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .logo-enhanced img {
      max-width: 1200px;
      width: 110%;
      height: auto;
      display: block;
      margin: 0 auto;
      filter: none;
      opacity: 1;
      transition: all 0.3s ease;
      background: transparent !important;
      border: none !important;
      outline: none !important;
    }

    .logo-enhanced:hover img {
      transform: scale(1.02);
    }

    /* Main Authentication Card */
    .auth-card {
      background: rgba(255, 255, 255, 0.98);
      backdrop-filter: blur(15px);
      border-radius: 24px;
      padding: 2rem;
      box-shadow: 0 20px 60px rgba(105, 51, 130, 0.12);
      border: 1px solid rgba(105, 51, 130, 0.1);
      position: relative;
      width: 100%;
      max-width: 800px;
      animation: slideInUp 0.8s ease-out 0.2s both;
    }

    @keyframes slideInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Welcome Header */
    .welcome-header {
      text-align: center;
      margin-bottom: 1.5rem;
    }

    .welcome-header h2 {
      color: #374151;
      font-size: 1.6rem;
      font-weight: 700;
      margin-bottom: 0.3rem;
    }

    .welcome-header .firm-name {
      color: #693382;
      font-size: 1rem;
      font-weight: 600;
      margin-bottom: 0.3rem;
    }

    .welcome-header .credentials {
      color: #6b7280;
      font-size: 0.85rem;
    }

    /* Authentication Methods - Keep original grid layout */
    .auth-methods {
      display: grid;
      grid-template-columns: 1fr;
      gap: 1.5rem;
      margin-bottom: 1rem;
    }

    .auth-option {
      background: white;
      border: 2px solid #f3f4f6;
      border-radius: 20px;
      padding: 1.2rem;
      text-align: center;
      transition: all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);
      position: relative;
      overflow: hidden;
      cursor: pointer;
      display: flex;
      flex-direction: column;
      height: 100%;
    }

    .auth-option::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
      transition: left 0.6s;
    }

    .auth-option:hover::before {
      left: 100%;
    }

    .auth-option:hover {
      border-color: #693382;
      transform: translateY(-8px) scale(1.02);
      box-shadow: 0 20px 40px rgba(105, 51, 130, 0.2);
    }

    .auth-icon {
      width: 60px;
      height: 60px;
      margin: 0 auto 0.8rem;
      border-radius: 16px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.6rem;
      transition: all 0.3s ease;
    }

    .email-icon {
      background: linear-gradient(135deg, #10b981, #059669);
      color: white;
    }

    .auth-option:hover .auth-icon {
      transform: scale(1.1) rotate(5deg);
    }

    .auth-option h3 {
      color: #374151;
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 0.6rem;
    }

    .auth-option p {
      color: #6b7280;
      font-size: 0.85rem;
      line-height: 1.4;
      margin-bottom: 1rem;
      flex-grow: 1;
    }

    /* Enhanced Buttons */
    .auth-button {
      background: linear-gradient(135deg, #10b981, #059669);
      color: white;
      border: none;
      border-radius: 14px;
      padding: 16px 28px;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 12px;
      position: relative;
      overflow: hidden;
    }

    .auth-button::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      transition: left 0.5s;
    }

    .auth-button:hover::before {
      left: 100%;
    }

    .auth-button:hover {
      transform: translateY(-3px);
      box-shadow: 0 12px 28px rgba(16, 185, 129, 0.4);
    }

    .auth-button:active {
      transform: translateY(-1px);
    }

    .auth-button:disabled {
      background: #9ca3af;
      cursor: not-allowed;
      transform: none;
    }

    .email-button {
      background: linear-gradient(135deg, #10b981, #059669);
    }

    .email-button:hover {
      box-shadow: 0 12px 28px rgba(16, 185, 129, 0.4);
    }

    /* Security Badge */
    .security-badge {
      position: absolute;
      top: 15px;
      right: 15px;
      background: linear-gradient(135deg, #693382, #8b5a96);
      color: white;
      padding: 8px 16px;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 600;
    }

    /* Security Notice */
    .security-notice {
      text-align: center;
      margin-top: 1.5rem;
    }

    .security-notice p {
      color: #6b7280;
      font-size: 0.9rem;
      font-weight: 500;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
    }

    /* Modal Styles */
    .modal-overlay {
      position: fixed;
      inset: 0;
      background: rgba(0, 0, 0, 0.7);
      backdrop-filter: blur(8px);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      padding: 20px;
      animation: fadeIn 0.3s ease-out;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .modal-content {
      background: white;
      border-radius: 24px;
      padding: 3rem;
      width: 100%;
      max-width: 450px;
      box-shadow: 0 25px 60px rgba(0, 0, 0, 0.3);
      animation: modalSlideIn 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);
      position: relative;
    }

    @keyframes modalSlideIn {
      from {
        opacity: 0;
        transform: translateY(-20px) scale(0.95);
      }
      to {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }

    .modal-content h3 {
      color: #374151;
      font-size: 1.6rem;
      font-weight: 700;
      margin-bottom: 1rem;
      text-align: center;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 12px;
    }

    .modal-content p {
      color: #6b7280;
      text-align: center;
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    .code-input {
      width: 100%;
      padding: 20px;
      border: 2px solid #e5e7eb;
      border-radius: 16px;
      font-size: 1.5rem;
      text-align: center;
      letter-spacing: 8px;
      font-weight: 700;
      margin-bottom: 2rem;
      transition: all 0.3s ease;
      font-family: 'SF Mono', 'Monaco', 'Consolas', monospace;
    }

    .code-input:focus {
      outline: none;
      border-color: #693382;
      box-shadow: 0 0 0 4px rgba(105, 51, 130, 0.1);
    }

    .modal-buttons {
      display: flex;
      gap: 1rem;
    }

    .secondary-button {
      background: white;
      color: #6b7280;
      border: 2px solid #e5e7eb;
      border-radius: 16px;
      padding: 16px 24px;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      flex: 1;
    }

    .secondary-button:hover {
      border-color: #693382;
      color: #693382;
      transform: translateY(-2px);
    }

    /* Toast Notifications */
    .notification {
      position: fixed;
      top: 30px;
      right: 30px;
      padding: 20px 28px;
      border-radius: 16px;
      color: white;
      font-weight: 600;
      z-index: 1001;
      animation: slideInRight 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);
      max-width: 400px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
      backdrop-filter: blur(10px);
    }

    .notification.success {
      background: rgba(16, 185, 129, 0.95);
      border: 1px solid rgba(16, 185, 129, 0.3);
      color: white;
    }

    .notification.error {
      background: rgba(239, 68, 68, 0.95);
      border: 1px solid rgba(239, 68, 68, 0.3);
      color: white;
    }

    @keyframes slideInRight {
      from {
        opacity: 0;
        transform: translateX(100%);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .auth-methods {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }

      .auth-card {
        padding: 2rem;
      }

      .logo-enhanced {
        margin-bottom: 1.5rem;
      }

      .modal-content {
        padding: 2rem;
      }

      .code-input {
        letter-spacing: 4px;
        font-size: 1.2rem;
      }
    }

    /* Reduced motion accessibility */
    @media (prefers-reduced-motion: reduce) {
      *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
      }
    }
  </style>
</head>
<body>
  <div class="main-container">
    <!-- QOLAE Logo - Clean, No Container -->
    <div class="logo-enhanced">
      <img src="http://localhost:3011/central-repository/images/qolaeNewLogo.svg" alt="QOLAE Logo" />
    </div>

    <!-- Main Authentication Card -->
    <div class="auth-card">
      <!-- Welcome Header -->
      <div class="welcome-header">
        <h2>Welcome, <%= contactName || 'Lawyer' %></h2>
        <div class="firm-name"><%= lawFirm %></div>
        <div class="credentials">PIN: <%= pin %> | Email: <%= email %></div>
      </div>

      <!-- Authentication Methods -->
      <div class="auth-methods">

        <!-- Email Verification -->
        <div class="auth-option">
          <span class="security-badge">Email Code</span>
          <div class="auth-icon email-icon">
            <i class="fas fa-envelope"></i>
          </div>
          <h3>Email Verification</h3>
          <p>Receive a 6-digit verification code via email as a secure authentication method.</p>
          <button id="emailBtn" class="auth-button email-button">
            Send Verification Code
          </button>
        </div>

      </div>
    </div>
  </div>

<script>
// Store credentials from server
const credentials = {
    pin: '<%= pin %>',
    email: '<%= email %>',
    lawFirm: '<%= lawFirm %>',
    contactName: '<%= contactName %>',
    authToken: '<%= authToken %>'
};

// Error handler utility
const errorHandler = {
    showSuccess(message) {
        this.showNotification(message, 'success');
    },
    showError(message) {
        this.showNotification(message, 'error');
    },
    showNotification(message, type) {
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.textContent = message;
        document.body.appendChild(notification);

        setTimeout(() => {
          notification.remove();
            }, 5000);
        }
    };

    // Auth service for API calls - Centralized API (port 3000)
    const authService = {
        async requestEmailCode(pin, email) {
            try {
                const response = await axios.post('/auth/request-email-code', { pin, email });
                return response.data;
            } catch (error) {
                console.error('Email code request failed:', error);
                throw error;
            }
        },

        async verifyEmailCode(pin, email, code) {
            try {
                // ‚úÖ Call SSOT-Simulation directly for verification
                const response = await axios.post('/auth/verify-email-code', { pin, email, code }, {
                    withCredentials: true
                });
                return response.data;
            } catch (error) {
                console.error('Email code verification failed:', error);
                throw error;
            }
        }
    };

    // Wait for DOM and check dependencies
    document.addEventListener('DOMContentLoaded', function() {
        console.log('üöÄ DOM loaded, checking dependencies...');
        console.log('‚úÖ All dependencies loaded successfully');
        initializeEventListeners();
    });

    function initializeEventListeners() {
        // Email Verification Handler
        document.getElementById('emailBtn').addEventListener('click', async () => {
            const button = document.getElementById('emailBtn');
            const originalText = button.innerHTML;

            button.disabled = true;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending Code...';
            try {
                const res = await authService.requestEmailCode(credentials.pin, credentials.email);
                if (res.success) {
                    errorHandler.showSuccess('Verification code sent to your email!');
                    showEmailVerificationForm();
                } else {
                    errorHandler.showError(res.error || 'Failed to send verification code.');
                }
            } catch (err) {
                console.error('Email error:', err);
                errorHandler.showError('Failed to send verification code. Please try again.');
            } finally {
                button.disabled = false;
                button.innerHTML = originalText;
            }
        });
    }

// Email Verification Modal
function showEmailVerificationForm() {
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.innerHTML = `
        <div class="modal-content">
            <h3>
                <i class="fas fa-envelope" style="color: #10b981;"></i>
                Enter Verification Code
            </h3>
            <p>Please enter the 6-digit code sent to your email address.</p>
            <input id="emailCodeInput" type="text" class="code-input" placeholder="000000" maxlength="6" />
            <div class="modal-buttons">
                <button class="secondary-button" onclick="closeForm()">Cancel</button>
                <button class="auth-button" onclick="verifyCode()">
                    <i class="fas fa-check"></i> Verify Code
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    setTimeout(() => {
        document.getElementById('emailCodeInput').focus();
    }, 100);
    
    document.getElementById('emailCodeInput').addEventListener('keydown', (e) => {
        if (e.key === 'Enter') {
            verifyCode();
        }
    });
}

async function verifyCode() {
    const code = document.getElementById('emailCodeInput').value.trim();
    
    if (!code || code.length !== 6) {
        errorHandler.showError('Please enter a valid 6-digit code.');
        return;
    }
    
    const button = document.querySelector('.modal-content .auth-button');
    const originalText = button.innerHTML;
    button.disabled = true;
    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Verifying...';
    
    try {
        console.log('üîç Debug: Starting 2FA verification...');
        console.log('üîç Debug: credentials.pin:', credentials.pin);
        console.log('üîç Debug: credentials.email:', credentials.email);
        console.log('üîç Debug: code:', code);
        
        const res = await authService.verifyEmailCode(credentials.pin, credentials.email, code);
        console.log('üîç Debug: API response:', res);
        
        if (res.success) {
            errorHandler.showSuccess('Authentication successful! Redirecting to dashboard...');
            setTimeout(() => {
                // Redirect to secure login page first (as designed)
                const secureLoginUrl = `http://localhost:3009/secure-login?pin=${encodeURIComponent(credentials.pin)}&verified=true`;
                window.location.href = secureLoginUrl;
            }, 1500);
        } else {
            errorHandler.showError('Invalid verification code. Please try again.');
        }
    } catch (err) {
        errorHandler.showError('Verification failed. Please try again.');
    } finally {
        button.disabled = false;
        button.innerHTML = originalText;
    }
}

function closeForm() {
    const modal = document.querySelector('.modal-overlay');
    if (modal) modal.remove();
}
</script>
</body>
</html>





