
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  filename: 'filename',
  originalPath: 'originalPath',
  tempPath: 'tempPath',
  finalPath: 'finalPath',
  documentType: 'documentType',
  isGenerated: 'isGenerated',
  isCustomized: 'isCustomized',
  isSent: 'isSent',
  isPushed: 'isPushed',
  generatedAt: 'generatedAt',
  sentAt: 'sentAt',
  pushedAt: 'pushedAt',
  createdAt: 'createdAt',
  lawyerId: 'lawyerId'
};

exports.Prisma.LawyerScalarFieldEnum = {
  id: 'id',
  pin: 'pin',
  lawFirm: 'lawFirm',
  contactName: 'contactName',
  phone: 'phone',
  email: 'email',
  status: 'status',
  readyToGenerateDocuments: 'readyToGenerateDocuments',
  readyToGenerateDocumentsSealed: 'readyToGenerateDocumentsSealed',
  sendEmail: 'sendEmail',
  sendEmailSealed: 'sendEmailSealed',
  pushToCentralRepository: 'pushToCentralRepository',
  pushToCentralRepositorySealed: 'pushToCentralRepositorySealed',
  readyToSend: 'readyToSend',
  pinAddedToTOB: 'pinAddedToTOB',
  customizedTOBPath: 'customizedTOBPath',
  pinHyperlink: 'pinHyperlink',
  documentsSent: 'documentsSent',
  emailSentAt: 'emailSentAt',
  pushedToRepository: 'pushedToRepository',
  repositoryPath: 'repositoryPath',
  completedAt: 'completedAt',
  followUpDueDate: 'followUpDueDate',
  followUpStatus: 'followUpStatus',
  stackGroup: 'stackGroup',
  position: 'position',
  isActive: 'isActive',
  isEditable: 'isEditable',
  isDraggable: 'isDraggable',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastModified: 'lastModified',
  createdBy: 'createdBy',
  customEmailSubject: 'customEmailSubject',
  customEmailContent: 'customEmailContent',
  cardCollapsed: 'cardCollapsed'
};

exports.Prisma.NoteScalarFieldEnum = {
  id: 'id',
  text: 'text',
  createdAt: 'createdAt',
  editedAt: 'editedAt',
  lawyerId: 'lawyerId',
  author: 'author'
};

exports.Prisma.AuthVerificationTokenScalarFieldEnum = {
  id: 'id',
  email: 'email',
  pin: 'pin',
  method: 'method',
  token: 'token',
  used: 'used',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.WebAuthnUserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  createdAt: 'createdAt'
};

exports.Prisma.WebAuthnCredentialScalarFieldEnum = {
  id: 'id',
  credentialId: 'credentialId',
  publicKey: 'publicKey',
  counter: 'counter',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Document: 'Document',
  Lawyer: 'Lawyer',
  Note: 'Note',
  AuthVerificationToken: 'AuthVerificationToken',
  WebAuthnUser: 'WebAuthnUser',
  WebAuthnCredential: 'WebAuthnCredential'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
