<!-- 
  * QOLAE Readers Registration Card
  * Case Manager registration form for new readers
  * Organized by Location Block Protocol
  * Author: Liz
  * Date: October 11, 2025
  * 
  * WORKFLOW STEPS (Mirrored in Location Blocks):
  * 1. Reader Basic Info (Name, Email, Phone)
  * 2. Reader Type Selection (First Reader vs Second Reader/Medical)
  * 3. Medical Verification (NMC/GMC for Second Readers)
  * 4. PIN Generation
  * 5. Email Invitation Sending
-->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register Reader - QOLAE Case Managers Dashboard</title>

<!-- ========================================== -->
<!-- LOCATION BLOCK 0: ALL CSS STYLES -->
<!-- ========================================== -->
    <style>
        /* ===== RESET & BASE STYLES ===== */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
        }

        /* ===== HEADER STYLES ===== */
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 30px;
            background: white;
            border-radius: 12px;
            margin-bottom: 25px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .qolae-logo {
            height: 120px;
            width: auto;
        }

        .back-button {
            background-color: #667eea;
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            font-weight: 500;
            font-size: 13px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            transition: background-color 0.2s;
        }

        .back-button:hover {
            background-color: #5a67d8;
        }

        /* ===== REGISTRATION CARD STYLES ===== */
        .registration-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            padding: 32px;
        }

        .card-title {
            font-size: 22px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 8px;
            color: #374151;
        }

        .card-subtitle {
            text-align: center;
            color: #6b7280;
            font-size: 14px;
            margin-bottom: 32px;
        }

        /* ===== FORM STYLES ===== */
        .form-group {
            margin-bottom: 24px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            margin-bottom: 8px;
            color: #374151;
            font-size: 14px;
        }

        .form-label .required {
            color: #ef4444;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            font-size: 14px;
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-input:disabled {
            background-color: #f3f4f6;
            cursor: not-allowed;
        }

        .form-select {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            font-size: 14px;
            background-color: white;
            cursor: pointer;
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        .form-select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .help-text {
            font-size: 12px;
            color: #6b7280;
            margin-top: 4px;
            font-style: italic;
        }

        /* ===== READER TYPE INFO BADGES ===== */
        .reader-type-info {
            display: flex;
            gap: 12px;
            margin-top: 8px;
        }

        .info-badge {
            flex: 1;
            padding: 12px;
            border-radius: 8px;
            font-size: 12px;
            text-align: center;
        }

        .info-badge.first-reader {
            background: #dbeafe;
            color: #1e40af;
            border: 1px solid #93c5fd;
        }

        .info-badge.second-reader {
            background: #dcfce7;
            color: #166534;
            border: 1px solid #86efac;
        }

        /* ===== MEDICAL SECTION STYLES ===== */
        .medical-section {
            display: none;
            animation: slideDown 0.3s ease-out;
        }

        .medical-section.visible {
            display: block;
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* ===== VERIFICATION PANEL STYLES ===== */
        .verification-panel {
            background: #fef3c7;
            border: 2px solid #f59e0b;
            border-radius: 8px;
            padding: 16px;
            margin-top: 12px;
        }

        .verification-panel h4 {
            font-size: 14px;
            font-weight: 600;
            color: #92400e;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .verification-row {
            display: flex;
            gap: 12px;
            align-items: flex-end;
        }

        .verification-input-group {
            flex: 1;
        }

        .btn-verify {
            padding: 12px 20px;
            background: #f59e0b;
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.2s;
            white-space: nowrap;
        }

        .btn-verify:hover {
            background: #d97706;
        }

        .btn-verify:disabled {
            background: #9ca3af;
            cursor: not-allowed;
        }

        .verification-status {
            display: none;
            margin-top: 12px;
            padding: 12px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
        }

        .verification-status.verified {
            display: block;
            background: #d1fae5;
            color: #065f46;
            border: 1px solid #10b981;
        }

        .verification-status.failed {
            display: block;
            background: #fee2e2;
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        /* ===== PIN SECTION STYLES ===== */
        .pin-section {
            background: linear-gradient(135deg, #f8f9ff 0%, #e8f0ff 100%);
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 24px;
            border-left: 4px solid #667eea;
        }

        .pin-section h3 {
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 12px;
        }

        .pin-display-row {
            display: flex;
            gap: 12px;
            align-items: center;
        }

        .pin-input-wrapper {
            flex: 1;
        }

        .pin-display {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #667eea;
            border-radius: 8px;
            font-size: 18px;
            font-weight: bold;
            font-family: 'Courier New', monospace;
            background: white;
            color: #667eea;
            text-align: center;
            letter-spacing: 2px;
        }

        /* ===== BUTTON STYLES ===== */
        .btn {
            padding: 12px 24px;
            border-radius: 8px;
            border: none;
            font-weight: 600;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-generate {
            background: #667eea;
            color: white;
        }

        .btn-generate:hover {
            background: #5a67d8;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

        .btn-generate:disabled {
            background: #9ca3af;
            cursor: not-allowed;
            transform: none;
        }

        .btn-primary {
            width: 100%;
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
            padding: 14px;
            font-size: 16px;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
        }

        .btn-primary:disabled {
            background: #9ca3af;
            cursor: not-allowed;
            transform: none;
        }

        /* ===== CHECKBOX STYLES ===== */
        .checkbox-wrapper {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 16px;
            background: #f9fafb;
            border-radius: 8px;
            border: 1px solid #e5e7eb;
            margin-bottom: 24px;
            cursor: pointer;
            transition: all 0.2s;
        }

        .checkbox-wrapper:hover {
            background: #f3f4f6;
            border-color: #667eea;
        }

        .checkbox-wrapper input[type="checkbox"] {
            width: 20px;
            height: 20px;
            cursor: pointer;
        }

        .checkbox-wrapper label {
            font-size: 14px;
            color: #374151;
            cursor: pointer;
            user-select: none;
        }

        /* ===== MESSAGE STYLES ===== */
        .success-message {
            display: none;
            background: #d1fae5;
            border: 1px solid #10b981;
            color: #065f46;
            padding: 16px;
            border-radius: 8px;
            margin-bottom: 24px;
            text-align: center;
            animation: slideDown 0.3s ease-out;
        }

        .success-message.visible {
            display: block;
        }

        .error-message {
            display: none;
            background: #fee2e2;
            border: 1px solid #ef4444;
            color: #991b1b;
            padding: 16px;
            border-radius: 8px;
            margin-bottom: 24px;
            text-align: center;
        }

        .error-message.visible {
            display: block;
        }

        /* ===== FORM FOOTER STYLES ===== */
        .form-footer {
            margin-top: 32px;
            padding-top: 24px;
            border-top: 1px solid #e5e7eb;
            text-align: center;
            color: #6b7280;
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div class="container">

<!-- ========================================== -->
<!-- LOCATION BLOCK 1: HEADER & NAVIGATION -->
<!-- ========================================== -->
        <div class="header">
            <img src="https://api.qolae.com/central-repository/images/qolaeNewLogo.svg"
                 alt="QOLAE Logo"
                 class="qolae-logo"
                 onerror="this.src='https://api.qolae.com/central-repository/images/qolaeNewLogo.png'">
            <a href="/hr-compliance-dashboard" class="back-button">← Back to Dashboard</a>
        </div>

<!-- ========================================== -->
<!-- LOCATION BLOCK 2: SUCCESS & ERROR MESSAGES -->
<!-- ========================================== -->
        <div id="successMessage" class="success-message">
            <strong>✅ Reader Registered Successfully!</strong>
            <p style="margin-top: 8px;">Email invitation sent to reader.</p>
        </div>

        <div id="errorMessage" class="error-message">
            <strong>❌ Registration Failed</strong>
            <p id="errorText" style="margin-top: 8px;"></p>
        </div>

<!-- ========================================== -->
<!-- LOCATION BLOCK 3: REGISTRATION FORM - BASIC INFO -->
<!-- Maps to: Reader name, email, phone collection -->
<!-- ========================================== -->
        <div class="registration-card">
            <h2 class="card-title">📋 Reader Registration</h2>
            <p class="card-subtitle">Register a new reader to review confidential reports</p>

            <form id="readerRegistrationForm">
                <!-- Reader Full Name -->
                <div class="form-group">
                    <label class="form-label">
                        Reader Full Name <span class="required">*</span>
                    </label>
                    <input
                        type="text"
                        id="readerName"
                        name="readerName"
                        class="form-input"
                        placeholder="e.g., John Smith"
                        required
                    >
                </div>

                <!-- Email Address -->
                <div class="form-group">
                    <label class="form-label">
                        Email Address <span class="required">*</span>
                    </label>
                    <input
                        type="email"
                        id="email"
                        name="email"
                        class="form-input"
                        placeholder="e.g., john.smith@email.com"
                        required
                    >
                </div>

                <!-- Phone Number -->
                <div class="form-group">
                    <label class="form-label">
                        Phone Number
                    </label>
                    <input
                        type="tel"
                        id="phone"
                        name="phone"
                        class="form-input"
                        placeholder="e.g., +44 7700 900000"
                    >
                </div>

<!-- ========================================== -->
<!-- LOCATION BLOCK 4: READER TYPE SELECTION -->
<!-- Maps to: First Reader (Admin/Lay) vs Second Reader (Medical) -->
<!-- ========================================== -->
                <div class="form-group">
                    <label class="form-label">
                        Reader Type <span class="required">*</span>
                    </label>
                    <select id="readerType" name="readerType" class="form-select" required>
                        <option value="">-- Select Reader Type --</option>
                        <option value="first_reader">First Reader (Non-Medical)</option>
                        <option value="second_reader">Second Reader (Medical Professional)</option>
                    </select>

                    <div class="reader-type-info">
                        <div class="info-badge first-reader">
                            <strong>First Reader</strong><br>
                            £50 per report<br>
                            Grammar & clarity
                        </div>
                        <div class="info-badge second-reader">
                            <strong>Second Reader</strong><br>
                            £75-100 per report<br>
                            Clinical accuracy
                        </div>
                    </div>
                </div>

<!-- ========================================== -->
<!-- LOCATION BLOCK 5: MEDICAL PROFESSIONAL SECTION -->
<!-- Maps to: NMC/GMC verification for Second Readers only -->
<!-- Conditional visibility based on reader type -->
<!-- ========================================== -->
                <div id="medicalSection" class="medical-section">
                    <!-- Specialization -->
                    <div class="form-group">
                        <label class="form-label">
                            Medical Specialization <span class="required">*</span>
                        </label>
                        <input
                            type="text"
                            id="specialization"
                            name="specialization"
                            class="form-input"
                            placeholder="e.g., Registered Nurse, Physician, Surgeon"
                        >
                        <div class="help-text">Enter their professional title/role</div>
                    </div>

                    <!-- NMC/GMC Verification Panel -->
                    <div class="verification-panel">
                        <h4>🔍 Professional Registration Verification</h4>

                        <!-- Registration Body -->
                        <div class="form-group" style="margin-bottom: 12px;">
                            <label class="form-label">
                                Registration Body <span class="required">*</span>
                            </label>
                            <select id="registrationBody" name="registrationBody" class="form-select">
                                <option value="">-- Select Registration Body --</option>
                                <option value="NMC">NMC (Nursing and Midwifery Council)</option>
                                <option value="GMC">GMC (General Medical Council)</option>
                                <option value="Other">Other Professional Body</option>
                            </select>
                        </div>

                        <!-- Registration Number with Verify Button -->
                        <div class="verification-row">
                            <div class="verification-input-group">
                                <label class="form-label">
                                    Registration Number <span class="required">*</span>
                                </label>
                                <input
                                    type="text"
                                    id="registrationNumber"
                                    name="registrationNumber"
                                    class="form-input"
                                    placeholder="e.g., 12A3456E"
                                    style="text-transform: uppercase;"
                                >
                                <div class="help-text">Enter their NMC/GMC PIN number</div>
                            </div>
                            <button
                                type="button"
                                id="verifyBtn"
                                class="btn-verify"
                                disabled
                            >
                                🔍 Verify
                            </button>
                        </div>

                        <!-- Verification Status -->
                        <div id="verificationStatus" class="verification-status">
                            <span id="verificationMessage"></span>
                        </div>
                    </div>
                </div>

<!-- ========================================== -->
<!-- LOCATION BLOCK 6: PIN GENERATION -->
<!-- Maps to: Auto-generate unique reader PIN -->
<!-- ========================================== -->
                <div class="pin-section">
                    <h3>🔑 Reader PIN Generation</h3>
                    <div class="pin-display-row">
                        <div class="pin-input-wrapper">
                            <input
                                type="text"
                                id="readerPin"
                                name="readerPin"
                                class="pin-display"
                                placeholder="RDR-______"
                                readonly
                            >
                        </div>
                        <button
                            type="button"
                            id="generatePinBtn"
                            class="btn btn-generate"
                            disabled
                        >
                            🎲 Generate PIN
                        </button>
                    </div>
                </div>

<!-- ========================================== -->
<!-- LOCATION BLOCK 7: EMAIL INVITATION & SUBMIT -->
<!-- Maps to: Send reader invitation email with NDA -->
<!-- ========================================== -->
                <div class="checkbox-wrapper">
                    <input
                        type="checkbox"
                        id="sendEmail"
                        name="sendEmail"
                        checked
                    >
                    <label for="sendEmail">
                        <strong>📧 Send introductory email with hyperlinked PIN</strong>
                    </label>
                </div>

                <button
                    type="submit"
                    id="registerBtn"
                    class="btn btn-primary"
                    disabled
                >
                    ✅ Register Reader & Send Email
                </button>

                <div class="form-footer">
                    <p>Reader will receive email invitation to access readers.qolae.com</p>
                    <p>They will complete 2FA authentication and sign the NDA before accessing reports.</p>
                </div>
            </form>
        </div>
    </div>

<!-- ========================================== -->
<!-- LOCATION BLOCK 8: JAVASCRIPT - FORM STATE MANAGEMENT -->
<!-- ========================================== -->
    <script>
        // ===== DOM ELEMENT REFERENCES =====
        const form = document.getElementById('readerRegistrationForm');
        const readerNameInput = document.getElementById('readerName');
        const emailInput = document.getElementById('email');
        const phoneInput = document.getElementById('phone');
        const readerTypeSelect = document.getElementById('readerType');
        const medicalSection = document.getElementById('medicalSection');
        const specializationInput = document.getElementById('specialization');
        const registrationBodySelect = document.getElementById('registrationBody');
        const registrationNumberInput = document.getElementById('registrationNumber');
        const verifyBtn = document.getElementById('verifyBtn');
        const verificationStatus = document.getElementById('verificationStatus');
        const verificationMessage = document.getElementById('verificationMessage');
        const readerPinInput = document.getElementById('readerPin');
        const generatePinBtn = document.getElementById('generatePinBtn');
        const registerBtn = document.getElementById('registerBtn');
        const sendEmailCheckbox = document.getElementById('sendEmail');
        const successMessage = document.getElementById('successMessage');
        const errorMessage = document.getElementById('errorMessage');
        const errorText = document.getElementById('errorText');

        let generatedPin = '';
        let isVerified = false;

        // ===== READER TYPE HANDLING =====
        readerTypeSelect.addEventListener('change', function() {
            const readerType = this.value;

            // Show/hide medical section for second readers
            if (readerType === 'second_reader') {
                medicalSection.classList.add('visible');
                specializationInput.required = true;
                registrationBodySelect.required = true;
                registrationNumberInput.required = true;
                isVerified = false;
            } else {
                medicalSection.classList.remove('visible');
                specializationInput.required = false;
                registrationBodySelect.required = false;
                registrationNumberInput.required = false;
                isVerified = true; // First readers don't need verification

                // Clear medical fields
                specializationInput.value = '';
                registrationBodySelect.value = '';
                registrationNumberInput.value = '';
                verificationStatus.className = 'verification-status';
            }

            validateForm();
        });

        // ===== VERIFICATION LOGIC =====
        registrationBodySelect.addEventListener('change', validateVerifyButton);
        registrationNumberInput.addEventListener('input', function() {
            this.value = this.value.toUpperCase();
            validateVerifyButton();
            isVerified = false; // Reset verification when number changes
            verificationStatus.className = 'verification-status';
        });

        function validateVerifyButton() {
            const hasBody = registrationBodySelect.value;
            const hasNumber = registrationNumberInput.value.trim();
            verifyBtn.disabled = !(hasBody && hasNumber);
        }

        verifyBtn.addEventListener('click', async function() {
            const registrationBody = registrationBodySelect.value;
            const registrationNumber = registrationNumberInput.value.trim();

            if (!registrationBody || !registrationNumber) {
                alert('Please select registration body and enter registration number.');
                return;
            }

            try {
                verifyBtn.disabled = true;
                verifyBtn.textContent = '⏳ Verifying...';

                const response = await fetch('/api/case-managers/verify-medical-registration', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        registrationBody: registrationBody,
                        registrationNumber: registrationNumber
                    })
                });

                const data = await response.json();

                if (data.verified) {
                    // Verification successful
                    isVerified = true;
                    verificationStatus.className = 'verification-status verified';
                    verificationMessage.textContent = `✅ Verified: ${data.name || 'Registered Professional'} - ${registrationBody} ${registrationNumber}`;
                    verifyBtn.textContent = '✅ Verified';
                    validateForm();
                } else {
                    // Verification failed
                    isVerified = false;
                    verificationStatus.className = 'verification-status failed';
                    verificationMessage.textContent = `❌ Verification Failed: ${data.error || 'Registration number not found'}`;
                    verifyBtn.textContent = '🔍 Verify';
                    verifyBtn.disabled = false;
                }

            } catch (error) {
                console.error('Verification error:', error);
                isVerified = false;
                verificationStatus.className = 'verification-status failed';
                verificationMessage.textContent = '❌ Verification Error: ' + error.message;
                verifyBtn.textContent = '🔍 Verify';
                verifyBtn.disabled = false;
            }
        });

        // ===== FORM VALIDATION =====
        function validateForm() {
            const readerName = readerNameInput.value.trim();
            const email = emailInput.value.trim();
            const readerType = readerTypeSelect.value;

            let medicalValid = true;
            if (readerType === 'second_reader') {
                const specialization = specializationInput.value.trim();
                const registrationBody = registrationBodySelect.value;
                const registrationNumber = registrationNumberInput.value.trim();
                medicalValid = specialization && registrationBody && registrationNumber && isVerified;
            }

            // Enable PIN generation button
            const canGeneratePin = readerName && email && readerType && medicalValid;
            generatePinBtn.disabled = !canGeneratePin;

            // Enable register button only if PIN generated
            const canRegister = generatedPin && canGeneratePin;
            registerBtn.disabled = !canRegister;
        }

        // Real-time validation
        readerNameInput.addEventListener('input', validateForm);
        emailInput.addEventListener('input', validateForm);
        readerTypeSelect.addEventListener('change', validateForm);
        specializationInput.addEventListener('input', validateForm);

        // ===== PIN GENERATION =====
        generatePinBtn.addEventListener('click', async function() {
            const readerName = readerNameInput.value.trim();

            try {
                generatePinBtn.disabled = true;
                generatePinBtn.textContent = '⏳ Generating...';

                const response = await fetch('/api/case-managers/generate-reader-pin', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        readerName: readerName
                    })
                });

                const data = await response.json();

                if (data.success) {
                    generatedPin = data.pin;
                    readerPinInput.value = generatedPin;
                    generatePinBtn.textContent = '✅ PIN Generated';
                    validateForm();
                } else {
                    throw new Error(data.error || 'Failed to generate PIN');
                }

            } catch (error) {
                console.error('PIN generation error:', error);
                alert('Error generating PIN: ' + error.message);
                generatePinBtn.textContent = '🎲 Generate PIN';
                generatePinBtn.disabled = false;
            }
        });

        // ===== FORM SUBMISSION =====
        form.addEventListener('submit', async function(e) {
            e.preventDefault();

            if (!generatedPin) {
                alert('Please generate a Reader PIN first.');
                return;
            }

            const readerType = readerTypeSelect.value;

            // Final validation for medical readers
            if (readerType === 'second_reader' && !isVerified) {
                alert('Please verify the medical registration before registering.');
                return;
            }

            const formData = {
                readerPin: generatedPin,
                readerName: readerNameInput.value.trim(),
                email: emailInput.value.trim(),
                phone: phoneInput.value.trim(),
                readerType: readerType,
                specialization: specializationInput.value.trim(),
                registrationBody: registrationBodySelect.value,
                registrationNumber: registrationNumberInput.value.trim(),
                registrationVerified: isVerified,
                sendEmail: sendEmailCheckbox.checked
            };

            try {
                registerBtn.disabled = true;
                registerBtn.textContent = '⏳ Registering...';

                const response = await fetch('/api/case-managers/register-reader', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                const data = await response.json();

                if (data.success) {
                    // Show success message
                    successMessage.classList.add('visible');
                    errorMessage.classList.remove('visible');

                    // Reset form
                    form.reset();
                    readerPinInput.value = '';
                    generatedPin = '';
                    isVerified = false;
                    generatePinBtn.textContent = '🎲 Generate PIN';
                    registerBtn.textContent = '✅ Register Reader & Send Email';
                    verifyBtn.textContent = '🔍 Verify';
                    medicalSection.classList.remove('visible');
                    verificationStatus.className = 'verification-status';

                    // Scroll to top
                    window.scrollTo({ top: 0, behavior: 'smooth' });

                    // Hide success message after 5 seconds
                    setTimeout(() => {
                        successMessage.classList.remove('visible');
                    }, 5000);

                    validateForm();

                } else {
                    throw new Error(data.error || 'Registration failed');
                }

            } catch (error) {
                console.error('Registration error:', error);
                errorText.textContent = error.message;
                errorMessage.classList.add('visible');
                successMessage.classList.remove('visible');
                registerBtn.textContent = '✅ Register Reader & Send Email';
                registerBtn.disabled = false;
            }
        });

        // ===== INITIALIZATION =====
        window.addEventListener('DOMContentLoaded', function() {
            validateForm();
            console.log('📖 Readers Registration Card initialized');
        });
    </script>
</body>
</html>
